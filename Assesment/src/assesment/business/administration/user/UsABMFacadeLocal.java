/*
 * Generated by XDoclet - Do not edit!
 */
package assesment.business.administration.user;

/**
 * Local interface for UsABMFacade.
 */
public interface UsABMFacadeLocal
   extends javax.ejb.EJBLocalObject
{

   public void userDelete( java.util.Collection users,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void userUpdate( assesment.communication.user.UserData data,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void userUpdate( assesment.communication.user.UserData data,boolean validate,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.String resetPassword( assesment.communication.user.UserData userData,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.String resetPassword( assesment.communication.user.UserData userData,java.lang.String password,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.String getNewPass(  ) ;

   public void saveLogin( long date,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void acceptTerms( assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void associateAssesment( java.lang.String user,java.lang.Integer assesment,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void associateAssesment( java.lang.String user,java.lang.String[] assesments,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void deleteAssociatedAssesment( java.lang.String user,java.util.Collection assesments,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public int[] saveModuleAnswers( java.lang.String user,java.lang.Integer assesment,java.util.Collection answers,int psiId,int psiTestId,assesment.communication.administration.user.UserSessionData userSessionData,boolean psico,int[] values,boolean feedback ) throws java.lang.Exception;

   public int[] saveModuleAnswers( java.lang.String user,java.lang.Integer assesment,java.util.Collection answers,int psiId,int psiTestId,assesment.communication.administration.user.UserSessionData userSessionData,boolean psico,int[] values,boolean feedback,java.lang.Integer newHire ) throws java.lang.Exception;

   public void savePsicoAnswers( java.lang.String user,java.lang.Integer assesment,java.util.Collection answers,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public int[] saveModuleAnswers( java.lang.String user,java.lang.Integer assesment,java.util.Collection answerList,java.lang.Integer newHireValue,boolean saveNewHire,boolean feedback,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.util.Collection createUsersFromDC( java.lang.Integer corporation,java.lang.Integer assesment,java.lang.String password,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void setRedirect( java.lang.String userId,java.lang.String redirect,java.lang.Integer eLearningUser,java.lang.Boolean eLearningEnabled,java.lang.Integer assesmentId,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void setEndDate( java.lang.String userId,java.lang.Integer assesmentId,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void setElearningEnabled( java.lang.String user,java.lang.Integer assessment,boolean result,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.String createBasfUser( java.lang.Integer assessment,java.lang.String copyUser,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void basfUserAssessment( java.lang.String login,java.lang.Integer assessment,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.util.Collection createUsersFromFile( java.lang.Integer group,java.util.Collection list,java.lang.String ending,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.util.Collection createUsersFromFile( java.util.Collection assesments,java.lang.String role,java.util.Collection list,java.lang.String ending,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public assesment.persistence.user.tables.UserPassword getUserPassword( java.lang.String loginname ) throws java.lang.Exception;

   public void createUserPassword( assesment.persistence.user.tables.UserPassword userPassword ) throws java.lang.Exception;

   public void savePSIaux( java.lang.String answers,int[] result,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void failAssessment( java.lang.Integer assessmentId,java.lang.String user,java.util.Date date,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.Object[] saveMultiAssessment( java.util.HashMap answerMap,java.lang.Integer multiId,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void deleteGroupUsers( java.lang.Integer group,java.util.Collection users,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void checkGroupAssesments( java.lang.String user,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void userChangeGroup( java.lang.String user,java.lang.Integer groupOld,java.lang.Integer groupNew,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.Integer saveTimacUser( java.lang.String id,java.lang.String firstName,java.lang.String lastName,java.lang.String email,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.Integer existTimacUser( java.lang.String id,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public java.lang.String[][] saveTimacUsers( java.util.Collection users,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void userCediCreate( assesment.communication.user.UserData data,int type,int ebtw,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void userCediAsociate( java.util.Collection users,int type,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

   public void deleteSendedReport( java.lang.String user,assesment.communication.administration.user.UserSessionData userSessionData ) throws java.lang.Exception;

}
