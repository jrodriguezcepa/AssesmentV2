/*
 * Generated by XDoclet - Do not edit!
 */
package assesment.business.question;

/**
 * Remote interface for QuestionReportFacade.
 */
public interface QuestionReportFacade
   extends javax.ejb.EJBObject
{

   public assesment.communication.question.QuestionData findQuestion( java.lang.Integer id,assesment.communication.administration.user.UserSessionData userSessionData,int type )
      throws java.lang.Exception, java.rmi.RemoteException;

   public assesment.communication.report.QuestionResultReportDataSource findQuestionResult( java.lang.Integer question,assesment.communication.administration.user.UserSessionData userSessionData,assesment.communication.language.Text messages )
      throws java.lang.Exception, java.rmi.RemoteException;

   public net.sf.jasperreports.engine.JRDataSource[] findQuestionReportByModule( java.lang.Integer module,java.lang.Integer assesment,assesment.communication.administration.user.UserSessionData userSessionData,assesment.communication.language.Text messages )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.Integer findAssesmentId( java.lang.Integer question,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.String[] getAgenSex( java.lang.String user,java.lang.Integer assesment,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.String[][] getWrongAnswers( java.lang.Integer assessment,java.lang.String user,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.String getEmailByQuestion( java.lang.Integer assessment,java.lang.String user,assesment.communication.language.Text messages,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.String getImage( java.lang.Integer questionId,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.util.HashMap getFullAnswers( java.lang.Integer assessment,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.String[][] getCompleteAnswers( java.lang.Integer assessment,java.lang.String login,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.lang.Integer[][] getOptionAnswers( java.lang.Integer assessment,java.lang.String login,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.util.Collection getVideos( assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.util.Collection getSurveyResult( java.lang.String login,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public java.util.Collection getTotalAnswers( java.lang.Integer assessment,assesment.communication.language.Text messages,assesment.communication.administration.user.UserSessionData userSessionData )
      throws java.lang.Exception, java.rmi.RemoteException;

   public assesment.communication.question.QuestionData findQuestionBKP( java.lang.Integer id,assesment.communication.administration.user.UserSessionData userSessionData,int type )
		      throws java.lang.Exception, java.rmi.RemoteException;
}
