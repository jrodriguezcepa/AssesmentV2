{"version":3,"sources":["utils/polyfills.js","state/reducers.js","state/types.js","state/store.js","state/actions.js","state/selectors.js","components/utils.js","components/questions/QuestionType1.jsx","components/questions/QuestionType2.jsx","components/questions/Choice.jsx","components/questions/QuestionType3.jsx","components/questions/QuestionType4.jsx","components/questions/QuestionType6.jsx","components/questions/QuestionType7.jsx","components/questions/QuestionType8.jsx","components/questions/QuestionType9.jsx","components/questions/QuestionType11.jsx","components/questions/QuestionType12.jsx","utils/usePortal.js","utils/Portal.js","components/questions/QuestionType16.jsx","components/Question.jsx","state/operations.js","components/Card.jsx","components/Modal.js","components/Deck.jsx","components/App.js","utils/parser.js","serviceWorker.js","index.js"],"names":["Object","entries","obj","ownProps","keys","i","length","resArray","Array","values","initialState","cards","currentCardIndex","finalText","questionReducer","state","action","type","id","payload","cardReducer","index","questions","map","questionFor","valid","every","completed","cardsReducer","combineReducers","card","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","updateQuestion","data","selectCard","getCardFromIndex","cardIndex","find","getCompletedCards","direction","filter","getTotalCards","getCurrentCardIndex","noop","getLocale","key","localKey","CEPA","locales","lang","en","error","getIsoDateString","plainValue","day","month","year","isoDateString","humanDateFormatParts","split","QuestionType1","answer","disabled","htmlId","inputType","onChange","selected","inputEl","useRef","useEffect","current","focus","className","readOnly","ref","name","value","event","currentTarget","getValidValueForTest","QuestionType2","props","inputValue","vt","in","ph","pk","es","pt","parseValue","$div","$","val","Choice","label","choiceType","checked","includes","htmlFor","QuestionType3","content","properties","choices","choiceDataFor","parseChoices","each","inputFor","$inputFor","push","attr","parent","text","parseProperties","nextIfValid","QuestionType4","options","parseOptions","optionFor","$optionFor","QuestionType6","selectEl","quantity","units","handleChange","slice","isValid","isNaN","QuestionType7","checkboxEl","date","never","checkboxHtmlId","QuestionType8","array","item","checkbox","newAnswer","itemFor","QuestionType9","test","QuestionType11","QuestionType12","Date","getFullYear","usePortal","rootElemRef","rootElem","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","remove","childNodes","Portal","children","target","createPortal","STATE_STOP","STATE_PLAYING","STATE_ENDED","QuestionType16","videoURL","useState","videoState","setVideoState","videoReady","setVideoReady","hidden","setHidden","videoElement","addEventListener","scrollY","offsetHeight","handlePlay","play","overlayContent","onClick","overlay","controls","onCanPlay","onPause","onPlay","onEnded","src","scrollToElement","dontEdit","cacheTypeComponents","getQuestionTypeComponent","QuestionTypeComponent","genericProperties","Boolean","parseCompleted","parseID","parseTitle","$inputs","inputsType","$checked","element","_getValueType13","_getValueType14","forEach","undefined","addGenericProperties","Question","connect","operations","handleAnswerChange","this","lastQuestion","title","waiting","Component","getClampIndex","getState","totalCards","selectors","Math","max","min","dispatch","clampIndex","actions","deltaCard","updateQuestionCallback","Promise","resolve","answerCurrentCardForTest","questionDataFor","validValueForTest","prevCard","nextCard","gotoFirstUncompletedCard","excludeIndex","uncompletedCards","deselectCard","updateCard","setFinalText","Buttons","canEdit","editing","onSubmit","onToggleEdit","useSelector","useDispatch","prevVisible","nextVisible","submitButton","editButton","Card","forwardRef","readyToSubmit","getPayload","answers","module","fetchData","url","testError","process","REACT_APP_TEST_ERROR","productionConfig","method","encodeURIComponent","JSON","stringify","headers","axios","sendAnswers","a","setWaiting","postURL","response","successResponse","console","handleSubmit","setState","handleToggleEdit","getUpdateAnswersData","replace","newAnswers","reduce","accumulator","idFor","prevData","cardRef","React","createRef","prevProps","prevState","wasEditing","wasReadyToSubmit","wasSelected","then","valids","completeQuestion","errors","final_text","questionsComponents","dataFor","questionIndex","nextProps","cardCompleted","nextState","Modal","onHide","containerRef","modal","on","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","Controls","reactChild","container","ReactDOM","Version","version","Deck","redirectIfNeeded","successRedirect","location","href","handleHide","before","cardsComponents","App","keydownHandler","metaKey","shiftKey","removeEventListener","hostname","match","$assessment","dataFromHTML","$fieldsets","fieldsetFor","$questions","divFor","$divFor","getDataFromHTML","callback","script","readyState","onreadystatechange","onload","getElementsByTagName","loadScript","html","headerHeight","matchMedia","matches","documentElement","animate","scrollTop","offset","top","rootElement","getElementById","store","createStore","configureStore","prepareInitialState","render","navigator","serviceWorker","ready","registration","unregister","jQuery","$thumbsSlider","slick","slidesToShow","slidesToScroll","infinite","prevArrow","nextArrow","responsive","breakpoint","settings","selectedCard","setTimeout"],"mappings":"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","file":"static/js/main.38a4c7ad.chunk.js","sourcesContent":["if (!Object.entries) {\n  Object.entries = function(obj){\n    var ownProps = Object.keys(obj),\n        i = ownProps.length,\n        resArray = new Array(i); // preallocate the Array\n    while (i--)\n      resArray[i] = [ownProps[i], obj[ownProps[i]]];\n    return resArray;\n  };\n}\n\nif (!Object.values) {\n  Object.values = function(obj){\n    var ownProps = Object.keys(obj),\n        i = ownProps.length,\n        resArray = new Array(i); // preallocate the Array\n    while (i--)\n      resArray[i] = obj[ownProps[i]];\n    return resArray;\n  };\n}\n","import { combineReducers } from 'redux';\nimport * as types from './types';\n\n/* State shape\n{\n  cards: array,\n  currentCardIndex: number,\n}\n*/\n\nconst initialState = {\n  cards: [],\n  currentCardIndex: 0,\n  finalText: null,\n};\n\n\nconst questionReducer = ( state = null, action = {} ) => {\n  switch (action.type) {\n    case types.UPDATE_QUESTION:\n      if (state.id === action.payload.id) {\n        return {\n          ...state,\n          ...action.payload,\n        };\n      }else{\n        return state;\n      }\n    default:\n      return state;\n  }\n};\n\n\nconst cardReducer = ( state = null, action = {} ) => {\n  switch (action.type) {\n    case types.UPDATE_CARD:\n      if (state.index === action.payload.index) {\n        return {\n          ...state,\n          ...action.payload,\n        };\n      }else{\n        return state;\n      }\n    case types.UPDATE_QUESTION:\n      const questions = state.questions.map(questionFor => questionReducer(questionFor, action));\n      return {\n        ...state,\n        questions,\n        valid: questions.every(({ valid }) => valid),\n        completed: questions.every(({ completed }) => completed),\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst cards = ( state = initialState.cards, action = {} ) => {\n  switch (action.type) {\n    case types.UPDATE_CARD:\n    case types.UPDATE_QUESTION:\n      return state.map(card => cardReducer(card, action));\n    default:\n      return state;\n  }\n};\n\n\nconst currentCardIndex = ( state = initialState.currentCardIndex, action = {} ) => {\n  switch (action.type) {\n    case types.SELECT_CARD:\n      return action.payload.index;\n    case types.DESELECT_CARD:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst finalText = ( state = initialState.finalText, action = {} ) => {\n  switch (action.type) {\n    case types.SET_FINAL_TEXT:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst cardsReducer = combineReducers({\n  cards,\n  currentCardIndex,\n  finalText,\n});\n\nexport default cardsReducer;\n","export const UPDATE_CARD = 'UPDATE_CARD';\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const DESELECT_CARD = 'DESELECT_CARD';\nexport const SET_FINAL_TEXT = 'SET_FINAL_TEXT';\n\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\n// import createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk';\nimport cardsReducer from './reducers';\n\n// import * as reducers from './ducks';\n\n// export const sagaMiddleware = createSagaMiddleware()\nconst middleware = process.env.NODE_ENV === 'production' ? [thunk] : [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||  compose;\nconst enhancer = composeEnhancers( applyMiddleware(...middleware) );\n\nexport default function configureStore(initialState = {}) {\n\tconst store = createStore( cardsReducer, initialState, enhancer );\n\treturn store;\n}\n\n","import * as types from './types';\n\n\nexport const updateCard = ( data ) => ({\n  type: types.UPDATE_CARD,\n  payload: data\n});\n\nexport const updateQuestion = ( data ) => ({\n\ttype: types.UPDATE_QUESTION,\n\tpayload: data\n});\n\nexport const deselectCard = () => ({\n\ttype: types.DESELECT_CARD\n});\n\nexport const selectCard = ( index ) => ({\n\ttype: types.SELECT_CARD,\n\tpayload: { index }\n});\n\nexport const setFinalText = ( data ) => ({\n  type: types.SET_FINAL_TEXT,\n  payload: data\n});\n","export const isCardSelected = (card, state) => {\n\treturn card.index == state.currentCardIndex;\n};\n\nexport const getCardFromIndex = (cardIndex, state) => {\n  return state.cards.find(card => card.index === cardIndex);\n};\n\nexport const getCompletedCards = (state, direction=true) => {\n  return state.cards.filter(({completed}) => !direction ^ completed);\n};\n\nexport const getQuestionFromId = (questionId, state) => {\n  state.cards.forEach((cardFor) => {\n    const cardMatchingQuestion = cardFor.questions.find(questionFor => questionFor.id === questionId);\n    if (cardMatchingQuestion) return cardMatchingQuestion;\n  });\n};\n\nexport const getTotalCards = (state) => {\n  return state.cards.length;\n};\n\nexport const getCurrentCardIndex = (state) => {\n  return state.currentCardIndex;\n};\n\nexport const getCurrentCard = (state) => {\n  return getCardFromIndex(getCurrentCardIndex(state), state);\n};\n\nexport const getQuestionCardFromId = (questionId, state) => {\n  const question = getQuestionFromId(questionId, state);\n  return getCardFromIndex(question.card, state);\n};\n","export const arrayDiff = (a, b) => {\n  return a.filter(itemFor => b.indexOf(itemFor) < 0);\n};\n\nexport const flattenList = (list) => {\n  return list.reduce(\n    (accumulator, itemFor) => [\n      ...accumulator, ...itemFor\n    ],\n    []\n  );\n};\n\nexport const flattenDict = (dict) => {\n  return Object.values(dict).reduce(\n    (accumulator, itemFor) => ({\n      ...accumulator, ...itemFor,\n    }),\n    {}\n  );\n};\n\nexport const noop = () => null;\n\nexport const sameArray = (a, b) => {\n  return a.length === b.length && arrayDiff(a, b).length === 0;\n};\n\nexport const getLocale = (key) => {\n  try {\n    const localKey = window.CEPA.locales[key];\n    return localKey[window.CEPA.lang] || localKey.en || key;\n  } catch (error) {\n    return key;\n  }\n};\n\nexport const loadScript = (url, callback=noop) => {\n  var script = window.document.createElement('script');\n  script.type = 'text/javascript';\n  if (script.readyState){  //IE\n    script.onreadystatechange = function() {\n      if (script.readyState == 'loaded' || script.readyState == 'complete') {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {  //Others\n    script.onload = function(){\n      callback();\n    };\n  }\n  script.src = url;\n  document.getElementsByTagName('head')[0].appendChild(script);\n};\n\n\nexport const validateEmail = (email) => {\n  const validEmailRe = /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n  return validEmailRe.test(email);\n};\n\n\nexport const getIsoDateString = (plainValue) => {\n  let day, month, year, isoDateString;\n  const humanDateFormatParts = plainValue.split('/');\n  if (humanDateFormatParts.length === 3){\n    year = humanDateFormatParts[2];\n    if (window.CEPA.lang === 'es' || window.CEPA.lang === 'pt'){\n      day = humanDateFormatParts[0];\n      month = humanDateFormatParts[1];\n    } else {\n      month = humanDateFormatParts[0];\n      day = humanDateFormatParts[1];\n    }\n    isoDateString = year + '-' + month + '-' + day;\n  }else{\n    isoDateString = plainValue;\n  }\n  return isoDateString;\n};\n","import React, { Fragment, useRef, useEffect } from 'react';\n\n\nfunction QuestionType1({ answer, disabled, htmlId, index, inputType, onChange=noop, selected }) {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    if (index===0 && selected && !disabled)\n    inputEl.current.focus();\n  }, [disabled, index, selected]);\n\n  return (\n    <Fragment>\n      <input\n        type={inputType || \"text\"}\n        id={htmlId}\n        className=\"form-control\"\n        readOnly={disabled}\n        ref={inputEl}\n        name={htmlId}\n        value={answer}\n        onChange={(event) => onChange(event.currentTarget.value)}\n      />\n    </Fragment>\n  );\n}\n\nQuestionType1.getValidValueForTest = (data) => {\n  return 'test short text';\n};\n\nexport default QuestionType1;\n","import React from 'react';\nimport { getIsoDateString } from '../utils';\nimport QuestionType1 from './QuestionType1';\n\n\nfunction QuestionType2(props) {\n\n  function handleChange(value) {\n    props.onChange(getIsoDateString(value));\n  }\n\n  return (\n    <QuestionType1\n      {...props}\n      onChange={handleChange}\n      inputType=\"date\"\n    />\n  );\n}\n\nQuestionType2.getValidValueForTest = (data) => {\n  const inputValue = {\n    vt: '10/31/1976',\n    in: '10/31/1976',\n    id: '10/31/1976',\n    ph: '10/31/1976',\n    pk: '10/31/1976',\n    en: '10/31/1976',\n    es: '31/10/1976',\n    pt: '31/10/1976',\n  }[window.CEPA.lang];\n  return getIsoDateString(inputValue);\n};\n\nQuestionType2.parseValue = ($div) => {\n  const inputValue = $('input[type=\"date\"]', $div).val();\n  return getIsoDateString(inputValue);\n};\n\nexport default QuestionType2;\n","import React from 'react';\n\n\nexport default function Choice({ answer, data: { label, id }, disabled, onChange, choiceType='radio' }) {\n\n  const htmlId = `id-${id}`;\n  const checked = (choiceType === 'checkbox') ? answer.includes(id) : answer===id;\n\n  return (\n    <div className={`cepa-choice custom-control custom-${choiceType}`}>\n      <input\n      className=\"custom-control-input\"\n      type={choiceType}\n      id={htmlId}\n      disabled={disabled}\n      name={id}\n      value={id}\n      checked={checked}\n      onChange={onChange}\n    />\n    <label\n      className=\"custom-control-label\"\n      htmlFor={htmlId}\n      disabled={disabled}\n    >\n      {label}\n    </label>\n    </div>\n  );\n\n}\n","import React, { Fragment }  from 'react';\nimport { noop } from '../utils';\nimport Choice from './Choice';\n\n\nfunction QuestionType3(props) {\n\n  const content = props.properties.choices.map((choiceDataFor, index) => (\n    <Choice\n      {...props}\n      key={index}\n      data={choiceDataFor}\n      onChange={(event) => props.onChange(event.currentTarget.value)}\n    />\n  ));\n  return (\n    <Fragment>\n      { content }\n    </Fragment>\n  );\n}\n\nconst parseChoices = ($div) => {\n  const choices = [];\n  $('input[type=\"radio\"]', $div).each((index, inputFor) => {\n    const $inputFor = $(inputFor);\n    choices.push({\n      id: $inputFor.attr('value'),\n      label: $inputFor.parent().text(),\n    });\n  });\n  return choices;\n};\n\nQuestionType3.getValidValueForTest = ({ properties: { choices } }) => {\n  return choices[0].id;\n};\n\nQuestionType3.parseProperties = ($div) => {\n  return {\n    choices: parseChoices($div),\n  };\n};\n\nQuestionType3.nextIfValid = true;\n\nexport default QuestionType3;\n","import React  from 'react';\nimport { noop } from '../utils';\n\n\nfunction QuestionType4({ answer, disabled, properties: { options }, htmlId, index, onChange=noop }) {\n  const content = options.map(({ id, label }, index) => (\n    <option\n      key={index}\n      value={id}\n    >\n      { label }\n    </option>\n  ));\n  return (\n    <select\n      id={htmlId}\n      disabled={disabled}\n      value={answer}\n      className=\"custom-select\"\n      onChange={(event) => onChange(event.currentTarget.value)}\n    >\n      { content }\n    </select>\n  );\n}\n\nconst parseOptions = ($div) => {\n  const options = [];\n  $('option', $div).each((index, optionFor) => {\n    const $optionFor = $(optionFor);\n    options.push({\n      id: $optionFor.attr('value'),\n      label: $optionFor.text(),\n    });\n  });\n  return options;\n};\n\nQuestionType4.getValidValueForTest = ({ properties: { options } }) => {\n  return options[1].id;\n};\n\nQuestionType4.parseProperties = ($div) => {\n  return {\n    options: parseOptions($div),\n  };\n};\n\nQuestionType4.nextIfValid = true;\n\nexport default QuestionType4;\n","import React, { Fragment, useRef } from 'react';\nimport { getLocale } from '../utils';\nimport QuestionType1 from './QuestionType1';\n\n\nfunction QuestionType6(props) {\n  const { answer, htmlId, onChange, disabled } = props;\n\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n\n  let quantity = '';\n  let units = window.CEPA.lang === 'en' ? 'm' : 'k';\n  if (answer) {\n    quantity = answer.slice(0,-1);\n    units = answer.slice(-1);\n  }\n\n  function handleChange(event) {\n    onChange(inputEl.current.value + selectEl.current.value);\n  }\n\n  return (\n    <Fragment>\n      <input\n        type=\"number\"\n        id={htmlId}\n        className=\"form-control\"\n        readOnly={disabled}\n        ref={inputEl}\n        name={htmlId}\n        value={quantity}\n        onChange={handleChange}\n      />\n      <select\n        disabled={disabled}\n        className=\"custom-select\"\n        onChange={handleChange}\n        ref={selectEl}\n        value={units}\n      >\n        <option value=\"k\">{getLocale('kmts')}</option>\n        <option value=\"m\">{getLocale('miles')}</option>\n      </select>\n    </Fragment>\n  );\n}\n\nQuestionType6.isValid = (answer) => {\n  if (!answer || answer.length < 2) return false;\n  const quantity = answer.slice(0,-1);\n  const units = answer.slice(-1);\n  return (units === 'k' || units === 'm')  && !isNaN(quantity);\n};\n\nQuestionType6.getValidValueForTest = (data) => {\n  return '100k';\n};\n\nexport default QuestionType6;\n","import React, { Fragment, useRef } from 'react';\nimport { getLocale } from '../utils';\nimport { getIsoDateString } from '../utils';\nimport QuestionType2 from './QuestionType2';\n\n\nfunction QuestionType7(props) {\n  const { answer, htmlId, onChange, disabled } = props;\n\n  const inputEl = useRef(null);\n  const checkboxEl = useRef(null);\n\n  let date = '';\n  let never = false;\n  if (answer==='0') {\n    never = true;\n  } else if (answer) {\n    date = answer;\n  }\n\n  function handleChange(event) {\n    if (checkboxEl.current.checked) {\n      onChange('0');\n    } else {\n      onChange(getIsoDateString(inputEl.current.value));\n    }\n  }\n\n  const checkboxHtmlId = `checkbox-${htmlId}`;\n  return (\n    <Fragment>\n      <input\n        type=\"date\"\n        id={htmlId}\n        className=\"form-control\"\n        readOnly={disabled}\n        ref={inputEl}\n        name={htmlId}\n        value={date}\n        onChange={handleChange}\n      />\n      <div className=\"cepa-choice custom-control custom-checkbox\">\n        <input\n          className=\"custom-control-input\"\n          type='checkbox'\n          id={checkboxHtmlId}\n          disabled={disabled}\n          checked={never}\n          onChange={handleChange}\n          ref={checkboxEl}\n        />\n        <label\n          className=\"custom-control-label\"\n          htmlFor={checkboxHtmlId}\n          disabled={disabled}\n        >\n          {getLocale('never')}\n        </label>\n      </div>\n    </Fragment>\n  );\n}\n\nQuestionType7.getValidValueForTest = QuestionType2.getValidValueForTest;\n\nexport default QuestionType7;\n","import React, { Fragment }  from 'react';\nimport { noop } from '../utils';\nimport Choice from './Choice';\n\n\nfunction QuestionType8(props) {\n\n  function alterArrayItem(array, item, direction) {\n    if (direction) {\n      return [...array, item];\n    } else {\n      return array.filter(itemFor => itemFor !== item);\n    }\n  }\n\n  function handleChange(event) {\n    const checkbox = event.currentTarget;\n    const newAnswer = alterArrayItem(props.answer, checkbox.value, checkbox.checked);\n    props.onChange(newAnswer);\n  }\n\n  const content = props.properties.choices.map((choiceDataFor, index) => (\n    <Choice\n      {...props}\n      key={index}\n      data={choiceDataFor}\n      choiceType=\"checkbox\"\n      onChange={handleChange}\n    />\n  ));\n  return (\n    <Fragment>\n      { content }\n    </Fragment>\n  );\n}\n\nconst parseChoices = ($div) => {\n  const choices = [];\n  $('input[type=\"checkbox\"]', $div).each((index, inputFor) => {\n    const $inputFor = $(inputFor);\n    choices.push({\n      id: $inputFor.attr('value'),\n      label: $inputFor.parent().text(),\n    });\n  });\n  return choices;\n};\n\nQuestionType8.getValidValueForTest = ({ properties: { choices } }) => {\n  return [choices[0].id,];\n};\n\nQuestionType8.parseProperties = ($div) => {\n  return {\n    choices: parseChoices($div),\n  };\n};\n\nexport default QuestionType8;\n","import React from 'react';\nimport { validateEmail } from '../utils';\nimport QuestionType1 from './QuestionType1';\n\n\nfunction QuestionType9(props) {\n  return (\n    <QuestionType1 {...props} inputType=\"email\" />\n  );\n}\n\nQuestionType9.getValidValueForTest = (data) => {\n  return 'test@example.com';\n};\n\nQuestionType9.isValid = (answer) => {\n  return validateEmail(answer);\n};\n\nexport default QuestionType9;\n","import React, { Fragment, useRef, useEffect } from 'react';\n\n\nfunction QuestionType11({ answer, disabled, htmlId, index, onChange=noop, selected }) {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    if (index===0 && selected && !disabled)\n    inputEl.current.focus();\n  }, [disabled, index, selected]);\n\n  return (\n    <Fragment>\n      <textarea\n        id={htmlId}\n        className=\"form-control\"\n        readOnly={disabled}\n        ref={inputEl}\n        name={htmlId}\n        value={answer}\n        onChange={(event) => onChange(event.currentTarget.value)}\n      >{answer}</textarea>\n    </Fragment>\n  );\n}\n\nQuestionType11.getValidValueForTest = (data) => {\n  return 'Test long text lorem ipsum.\\nAnother line.';\n};\n\nexport default QuestionType11;\n","import React from 'react';\nimport QuestionType2 from './QuestionType2';\n\n\nfunction QuestionType12(props) {\n  return (\n    <QuestionType2\n      {...props}\n    />\n  );\n}\n\nQuestionType12.getValidValueForTest = QuestionType2.getValidValueForTest;\n\nQuestionType12.parseValue = QuestionType2.parseValue;\n\nQuestionType12.isValid = (answer) => {\n  const years = new Date(new Date() - new Date(answer)).getFullYear() - 1970;\n  return years >= 18;\n};\n\n\nexport default QuestionType12;\n","import React, { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem) {\n  document.body.insertBefore(\n    rootElem,\n    document.body.lastElementChild.nextElementSibling,\n  );\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id) {\n  const rootElemRef = useRef(null);\n\n  useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n    const existingParent = document.querySelector(`#${id}`);\n    // Parent is either a new root or the existing dom element\n    const parentElem = existingParent || createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    if (!existingParent) {\n      addRootElement(parentElem);\n    }\n\n    // Add the detached element to the parent\n    parentElem.appendChild(rootElemRef.current);\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport usePortal from './usePortal';\n\n/**\n * @example\n * <Portal>\n *   <p>Thinking with portals</p>\n * </Portal>\n */\nconst Portal = ({ id, children }) => {\n  const target = usePortal(id);\n  return createPortal(\n    children,\n    target,\n  );\n};\n\nexport default Portal;\n","import React, { useEffect, useRef, useState }  from 'react';\nimport { getLocale } from '../utils';\nimport Portal from '../../utils/Portal';\n\nconst STATE_STOP = 'STATE_STOP';\nconst STATE_PLAYING = 'STATE_PLAYING';\nconst STATE_ENDED = 'STATE_ENDED';\n\nfunction QuestionType16({ answer, id, card, properties: { videoURL }, onChange=noop, selectCard }) {\n  const [videoState, setVideoState] = useState(STATE_STOP);\n  const [videoReady, setVideoReady] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const videoElement = useRef(null);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      setHidden(window.scrollY>videoElement.current.offsetHeight);\n    });\n  });\n\n  const handleVideoEnded = () => {\n    setVideoState(STATE_ENDED);\n    onChange(true);\n  };\n\n  const handleVideoCanPlay = () => {\n    setVideoReady(true);\n  };\n\n  const handleVideoPlay = () => {\n    setVideoState(STATE_PLAYING);\n  };\n\n  const handleVideoPause = () => {\n    setVideoState(STATE_STOP);\n  };\n\n  const handlePlay = () => {\n    videoElement.current.play();\n  };\n\n  const handleBackToVideo = () => {\n    selectCard(card);\n    window.CEPA.scrollToElement(videoElement.current);\n  };\n\n  const overlayContent = {\n    [STATE_STOP]:\n      videoReady ? (\n        <div className=\"full-content clickable\" onClick={handlePlay}>\n          <div className=\"centered-content\">\n            <div className=\"icon-play-container\" />\n            <h3>{getLocale('start')}</h3>\n          </div>\n        </div>\n      ) : null,\n    [STATE_ENDED]: (\n      <div className=\"full-content clickable\" onClick={handlePlay}>\n        <div className=\"centered-content\">\n          <div className=\"icon-play-container\" />\n          <h3>{getLocale('restart')}</h3>\n        </div>\n      </div>\n    ),\n  }[videoState];\n\n  const overlay = overlayContent ? (\n    <div className=\"video-player-overlay\">{ overlayContent }</div>\n  ) : null;\n\n  return (\n    <div className={`video-player${hidden ? ' hidden' : ''}`}>\n      <video\n        controls=\"controls\"\n        onCanPlay={handleVideoCanPlay}\n        onPause={handleVideoPause}\n        onPlay={handleVideoPlay}\n        onEnded={handleVideoEnded}\n        ref={videoElement}\n        src={videoURL}\n      />\n      { overlay }\n      <Portal id=\"back-to-video-portal\">\n        <div className={`back-to-video-wrapper${hidden ? ' video-player-hidden' : ''}`}>\n          <button\n            className=\"back-to-video\"\n            onClick={handleBackToVideo}\n          >\n            {getLocale('backToVideo')}\n            <i className=\"icon-arrows-green\" />\n          </button>\n        </div>\n      </Portal>\n    </div>\n  );\n}\n\nQuestionType16.dontEdit = true;\n\nQuestionType16.getValidValueForTest = (data) => {\n  return true;\n};\n\nQuestionType16.parseProperties = ($div) => {\n  const videoURL = $div.data('video-url') || `http://testing.cepadc.com/assesment/videos/video_${$div.data('video-id')}.mp4`;\n  return {\n    videoURL,\n  };\n};\n\nQuestionType16.nextIfValid = true;\n\nexport default QuestionType16;\n","import React, { Component }  from 'react';\nimport { connect }  from 'react-redux';\nimport * as operations from '../state/operations';\nimport * as selectors from '../state/selectors';\nimport { noop } from './utils';\nimport * as questions from './questions';\n\n\nconst cacheTypeComponents = {};\n\nconst addGenericProperties = (QuestionTypeComponent, type) => {\n  const genericProperties = {\n    isValid: (answer) => Boolean(answer),\n    nextIfValid: false,\n    dontEdit: false,\n    parseCompleted: ($div) => $div.data('completed'),\n    parseID: ($div) => $div.attr('id').slice(2),\n    parseProperties: ($div) => {},\n    parseTitle: ($div) => $div.find('label[for]').text(),\n    parseValue: ($div) => {\n      const $inputs = $('input, select, textarea', $div);\n      if ($inputs.length > 1){\n        const inputsType = $inputs.attr('type');\n        const $checked = $inputs.filter(':checked');\n        if (inputsType==='checkbox'){\n          var values = [];\n          $checked.each(function(index, element){\n            values.push($(element).val());\n          });\n          return values;\n        }else if (inputsType==='radio'){\n          if (type===13){\n            return this._getValueType13();\n          }else if (type===14){\n            return this._getValueType14();\n          }else{\n            return $checked.val();\n          }\n        }\n      }else{\n        return $inputs.val();\n      }\n    },\n    type\n  };\n  Object.entries(genericProperties).forEach(([name, value], index) => {\n    if (QuestionTypeComponent[name] === undefined) {\n      QuestionTypeComponent[name] = value;\n    }\n  });\n  return QuestionTypeComponent;\n};\n\nexport const getQuestionTypeComponent = (type) => {\n  if (cacheTypeComponents[type]) return cacheTypeComponents[type];\n  const QuestionTypeComponent = questions['QuestionType'+type];\n  addGenericProperties(QuestionTypeComponent, type);\n  cacheTypeComponents[type] = QuestionTypeComponent;\n  return QuestionTypeComponent;\n};\n\nexport default @connect(\n  (state, props) => ({\n  }),\n  operations\n)\nclass Question extends Component {\n\n  constructor(props) {\n    super(props);\n    this.QuestionTypeComponent = getQuestionTypeComponent(props.type);\n  }\n\n  handleAnswerChange = (value) => {\n    const { id, updateQuestion } = this.props;\n    const valid = this.QuestionTypeComponent.isValid(value);\n    updateQuestion({\n      id,\n      answer: value,\n      valid,\n    });\n  }\n\n  render() {\n    const { completed, id, lastQuestion, readOnly, title, type, error, waiting } = this.props;\n    const htmlId = `id-${id}`;\n    const disabled = readOnly || waiting;\n    return (\n      <div id={`q${id}`} className={`cepa-question form-group question-type-${ type }${ completed ? ' completed' : ''}${ error ? ' error' : ''}${ lastQuestion ? ' last-question' : ''}`}>\n        {\n          title && (\n            <label\n              className=\"cepa-question__label\"\n              disabled={disabled}\n              htmlFor={htmlId}\n            >\n            { title }</label>\n          )\n        }\n        <this.QuestionTypeComponent\n          {...this.props}\n          disabled={disabled}\n          htmlId={htmlId}\n          onChange={this.handleAnswerChange}\n        />\n        {\n          error && (<div className=\"error-text\">{ error }</div>)\n        }\n      </div>\n    );\n  }\n\n}\n","import * as actions from './actions';\nimport * as selectors from './selectors';\nimport { getQuestionTypeComponent } from '../components/Question';\n\n\nexport const getClampIndex = ( index, getState ) => {\n  const totalCards = selectors.getTotalCards(getState());\n  const clampIndex = Math.max(0, Math.min(totalCards-1, index));\n  return clampIndex;\n};\n\nexport const selectCard = ( index ) => ( dispatch, getState ) => {\n  const currentCardIndex = selectors.getCurrentCardIndex(getState());\n  const clampIndex = getClampIndex(index, getState);\n  if (clampIndex !== currentCardIndex) dispatch(actions.selectCard(clampIndex));\n};\n\nexport const deltaCard = ( quantity ) => ( dispatch, getState ) => {\n  const currentCardIndex = selectors.getCurrentCardIndex(getState());\n  const clampIndex = getClampIndex(currentCardIndex + quantity, getState);\n  if (clampIndex !== currentCardIndex) dispatch(actions.selectCard(clampIndex));\n};\n\nexport const updateQuestionCallback = ( data ) => ( dispatch, getState ) => {\n  dispatch(actions.updateQuestion(data));\n  return Promise.resolve();\n};\n\nexport const answerCurrentCardForTest = () => ( dispatch, getState ) => {\n  const card = selectors.getCurrentCard(getState());\n  card.questions.forEach((questionDataFor) => {\n    const questionTypeComponent = getQuestionTypeComponent(questionDataFor.type);\n    const validValueForTest = questionTypeComponent.getValidValueForTest(questionDataFor);\n    dispatch(actions.updateQuestion({\n      id: questionDataFor.id,\n      answer: validValueForTest,\n      valid: true,\n    }));\n  });\n};\n\nexport const prevCard = () => deltaCard(-1);\n\nexport const nextCard = () => deltaCard(1);\n\nexport const gotoFirstUncompletedCard = (excludeIndex) => ( dispatch, getState ) => {\n  let uncompletedCards = selectors.getCompletedCards(getState(), false);\n  uncompletedCards = uncompletedCards.filter(({index}) => index !== excludeIndex);\n  if (uncompletedCards.length) {\n    dispatch(actions.selectCard(uncompletedCards[0].index));\n  }\n};\n\nexport const deselectCard = actions.deselectCard;\nexport const updateCard = actions.updateCard;\nexport const updateQuestion = actions.updateQuestion;\nexport const setFinalText = actions.setFinalText;\n","import React, { Fragment, Component } from 'react';\nimport { connect, useDispatch, useSelector, useState } from 'react-redux';\nimport { noop, getLocale } from './utils';\nimport * as operations from '../state/operations';\nimport * as selectors from '../state/selectors';\nimport axios from 'axios';\nimport Question, { getQuestionTypeComponent } from './Question';\n\n\nexport function Buttons({ index, canEdit, completed, editing, onSubmit, onToggleEdit, readOnly, selected, valid, waiting }) {\n  const totalCards = useSelector(state => selectors.getTotalCards(state));\n  const dispatch = useDispatch();\n  const prevVisible = index > 0;\n  const nextVisible = index < totalCards - 1;\n  const submitButton = (\n    <button\n      className=\"btn btn-primary\"\n      disabled={!valid || waiting}\n      onClick={onSubmit}\n    >\n      { waiting ? getLocale('submitting') : getLocale('submit') }\n    </button>\n  );\n  const editButton = (\n    <button\n      className=\"btn btn-primary-outline\"\n      onClick={ onToggleEdit }\n    >\n      { editing ? getLocale('cancel') : getLocale('edit') }\n    </button>\n  );\n\n  return (\n      <div className=\"card__buttons\">\n\n        <div className=\"card__buttons__actions\">\n          { canEdit && completed && editButton }\n          { canEdit && !readOnly && submitButton }\n        </div>\n\n        <div className=\"card__buttons__arrows\">\n          { prevVisible && (\n            <button\n              disabled={!selected}\n              className=\"arrow-prev\"\n              onClick={() => dispatch(operations.prevCard())}\n            >\n              {getLocale('previous')}\n            </button>\n          ) }\n          { nextVisible && (\n            <button\n              disabled={!selected}\n              className=\"arrow-next\"\n              onClick={() => dispatch(operations.nextCard())}\n            >\n              {getLocale('next')}\n            </button>\n          ) }\n        </div>\n      </div>\n  );\n}\n\nexport default @connect(\n  null,\n  operations,\n  null,\n  {\n    forwardRef: true,\n  },\n)\nclass Card extends Component {\n\n  state = {\n    canEdit: true,\n    editing: false,\n    readyToSubmit: false,\n  }\n\n  constructor(props) {\n    super(props);\n    this.cardRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { completed: cardCompleted, questions, index } = nextProps;\n    const { editing } = prevState;\n    const nextState = {};\n\n    const readyToSubmit = questions.every(({type, completed, valid}, index) => {\n      const nextIfValid = getQuestionTypeComponent(type).nextIfValid;\n      const readyToSubmitFor = ((!cardCompleted || !completed || editing) && valid && nextIfValid);\n      return readyToSubmitFor;\n    }\n    );\n    if (readyToSubmit !== prevState.readyToSubmit) nextState.readyToSubmit = readyToSubmit;\n\n    const dontEdit = questions.every(({type}) => getQuestionTypeComponent(type).dontEdit);\n    const canEdit = !dontEdit;\n    if (canEdit !== prevState.canEdit) nextState.canEdit = canEdit;\n    return nextState;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { editing, readyToSubmit } = this.state;\n    const { editing: wasEditing, readyToSubmit: wasReadyToSubmit } = prevState;\n    const { selected } = this.props;\n    const { selected: wasSelected } = prevProps;\n\n    if (selected && selected !== wasSelected) {\n      window.CEPA.scrollToElement(this.cardRef.current);\n    }\n    if (readyToSubmit && !wasReadyToSubmit && !(editing && !wasEditing)) {\n      this.handleSubmit();\n    }\n  }\n\n  getPayload = () => {\n    const { questions } = this.props;\n    const answers = questions.map(\n      ({ id, answer }) => ({ id, answer })\n    );\n    return {\n      module: window.CEPA.module,\n      answers,\n    };\n  }\n\n  fetchData = (url, data) => {\n    const { index } = this.props;\n    const testError = (process.env.REACT_APP_TEST_ERROR === 'true');\n    const production = (process.env.NODE_ENV === 'production');\n    const productionConfig = {\n      url,\n      method: 'post',\n      data: encodeURIComponent(JSON.stringify(data)),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    };\n    const developConfig = {\n      url: `_ajax/server_response_${index+1}${testError?'_error':''}.json`,\n      method: 'get',\n      params: data,\n    };\n    const response = axios(production ? productionConfig : developConfig);\n    return response;\n  }\n\n  setWaiting(direction) {\n    const { index, updateCard } = this.props;\n    updateCard({ index, waiting: direction });\n  }\n\n  sendAnswers = async () => {\n    const { valid } = this.props;\n    if (!valid) return;\n    this.setWaiting(true);\n    const postURL = window.CEPA.postURL;\n    var data = this.getPayload();\n    const response = await this.fetchData(postURL, data);\n    try {\n      this.successResponse(response.data);\n    } catch (error) {\n      console.error('error', error);\n    }\n    this.setWaiting(false);\n  }\n\n  handleSubmit = () => {\n    const { gotoFirstUncompletedCard, index, valid } = this.props;\n    if (!valid) return;\n    this.setState({\n      editing: false\n    });\n    this.sendAnswers();\n    gotoFirstUncompletedCard(index);\n  }\n\n  handleToggleEdit = () => {\n    this.setState(({editing}) => ({editing: !editing}));\n  }\n\n  completeQuestion(id, error) {\n    const { nextCard, updateQuestionCallback, completed } = this.props;\n    const questionCompleted = !Boolean(error);\n    updateQuestionCallback({\n      id,\n      completed: questionCompleted,\n      error,\n    }).then(()=>{\n    });\n  }\n\n  successResponse(data) {\n    const { setFinalText } = this.props;\n    if (data.valids) {\n      data.valids.map((id) => this.completeQuestion(id));\n    }\n    if (data.errors) {\n      data.errors.map(({id, error}) => this.completeQuestion(id, error));\n    }\n    if (data.final_text) {\n      setFinalText(data.final_text);\n    }\n  }\n\n  getUpdateAnswersData = (id, data, replace=false) => {\n    const { answers } = this.state;\n    const newAnswers = replace ?\n      { ...answers, [id]: data }\n        :\n      Object.entries(answers).reduce((accumulator, [idFor, prevData]) => {\n        accumulator[idFor] = (id !== idFor) ? prevData : { ...prevData, ...data };\n        return accumulator;\n      }, {});\n    return newAnswers;\n  }\n\n  render() {\n    const { className, index, questions, title, completed, selected, valid, waiting } = this.props;\n    const { canEdit, editing } = this.state;\n    const readOnly = !selected || (completed && !editing) || waiting;\n\n    const questionsComponents = questions.map((dataFor, questionIndex) => {\n      return (\n        <Question\n          index={questionIndex}\n          key={questionIndex}\n          lastQuestion={questionIndex === questions.length-1}\n          readOnly={readOnly}\n          selected={selected}\n          waiting={waiting}\n          {...dataFor}\n        />\n      );\n    });\n\n    return (\n      <div className={`row cepa-card ${ className }${ selected ? ' selected' : ''}${ completed ? ' completed' : ''}${ valid ? ' valid' : ''}${ waiting ? ' waiting' : ''}`} ref={this.cardRef}>\n        <div className=\"card col px-0 mb-4 shadow-sm\">\n          <div className=\"card-body\">\n            { title &&\n              <h3>{ title }</h3>\n            }\n            { questionsComponents }\n            <Buttons\n              completed={completed}\n              canEdit={canEdit}\n              editing={editing}\n              index={index}\n              onSubmit={this.handleSubmit}\n              onToggleEdit={this.handleToggleEdit}\n              readOnly={readOnly}\n              selected={selected}\n              valid={valid}\n              waiting={waiting}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React, { useEffect, useRef } from 'react';\nimport { getLocale } from './utils';\n\n\nfunction Modal({title, body, onHide}) {\n\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const $ = window.$;\n    window.containerRef = containerRef;\n    $(containerRef.current)\n      .modal()\n      .on('hidden.bs.modal', onHide);\n  });\n\n  return (\n    <div ref={containerRef} className=\"modal fade\" id=\"\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Success Message\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{title}</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\" dangerouslySetInnerHTML={{__html: body}} />\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">{getLocale('close')}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { Component, Fragment }  from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport * as selectors from '../state/selectors';\nimport { noop, sameArray } from './utils';\nimport Card from './Card';\nimport Modal from './Modal';\n\nconst $ = window.$;\n\n\nexport function Controls({ currentCardIndex, totalCards }) {\n  const reactChild = (\n    <div className=\"cepa-controls\">\n      {/*<button className=\"btn btn-sm btn-outline-primary controls__prev-btn\" onClick={onPrev} disabled={current===0}>Prev</button>*/}\n      <span className=\"controls__numbers\">{currentCardIndex+1} / {totalCards}</span>\n      {/*<button className=\"btn btn-sm btn-outline-primary controls__next-btn\" onClick={onNext} disabled={current===total-1}>Next</button>*/}\n    </div>\n  );\n  const container = document.querySelector('.cepa-controls-wrapper');\n  return container && ReactDOM.createPortal( reactChild, container );\n}\n\nexport function Version({ version }) {\n  const reactChild = (\n    <div className=\"copyright\">v{version}</div>\n  );\n  const container = document.querySelector('.brand');\n  return container && ReactDOM.createPortal( reactChild, container );\n}\n\n\nexport default @connect(\n  (state, props) => ({\n    cards: state.cards,\n    totalCards: selectors.getTotalCards(state),\n    currentCardIndex: selectors.getCurrentCardIndex(state),\n    finalText: state.finalText,\n  })\n)\nclass Deck extends Component {\n\n  state = {\n    completed: false\n  }\n\n  constructor(props) {\n    super(props);\n    $('nav.navbar .navbar-brand').before('<div class=\"cepa-controls-wrapper\"></div>');\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { cards } = nextProps;\n    const completed = cards.every(({ completed }) => completed);\n    if (completed === prevState.completed) return {};\n    return { completed };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { finalText } = this.props;\n    const { completed } = this.state;\n    if (completed && !finalText) {\n      this.redirectIfNeeded();\n    }\n  }\n\n  redirectIfNeeded = () => {\n    if (window.CEPA.successRedirect) {\n      window.location.href = window.CEPA.successRedirect;\n    }\n  }\n\n  handleHide = () => {\n    const { completed } = this.state;\n    if (completed) {\n      this.redirectIfNeeded();\n    }\n  }\n\n  render() {\n    const { cards, currentCardIndex, finalText, totalCards } = this.props;\n    const { completed } = this.state;\n\n    const cardsComponents = cards.map((data, index) => (\n      <Card\n        key={index}\n        selected={currentCardIndex===index}\n        {...data}\n      />\n    ));\n\n    return (\n      <Fragment>\n        { Boolean(finalText) && completed && <Modal body={finalText} onHide={this.handleHide} /> }\n        <div className=\"cepa-deck\">\n          <div className=\"cepa-deck__cards container\">\n            { cardsComponents }\n          </div>\n          <Controls\n            currentCardIndex={currentCardIndex}\n            totalCards={totalCards}\n          />\n          <Version\n            version={process.env.REACT_APP_VERSION}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as operations from '../state/operations';\nimport { flattenDict } from './utils';\nimport Deck from './Deck';\n\n\nfunction App({data}) {\n  const dispatch = useDispatch();\n\n  function keydownHandler({ key, metaKey, shiftKey }) {\n    if (metaKey && shiftKey && (key === 'u' || key === 'e')) dispatch(operations.answerCurrentCardForTest());\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', keydownHandler);\n    return () => {\n      window.removeEventListener('keydown', keydownHandler);\n    };\n  }, []);\n\n\n  return (\n    <div className=\"cepa-app\">\n      <Deck />\n    </div>\n  );\n}\n\nexport default App;\n","import { genericIsValid, getQuestionTypeComponent } from '../components/Question';\nimport * as selectors from '../state/selectors';\n\n\nconst $ = window.$;\n\nexport function getDataFromHTML($assessment) {\n  const $fieldsets = $('> fieldset', $assessment);\n  const cards = [];\n  $fieldsets.each((cardIndex, fieldsetFor) => {\n    const $questions = $('> div[data-type]', fieldsetFor);\n    const questions = [];\n    $questions.each((questionIndex, divFor) => {\n      const $divFor = $(divFor);\n      const type = $divFor.data('type');\n      const QuestionTypeComponent = getQuestionTypeComponent(type);\n      const answer = QuestionTypeComponent.parseValue($divFor);\n      questions.push({\n        answer,\n        card: cardIndex,\n        id: QuestionTypeComponent.parseID($divFor),\n        index: questionIndex,\n        completed: QuestionTypeComponent.parseCompleted($divFor),\n        properties: QuestionTypeComponent.parseProperties($divFor),\n        title: QuestionTypeComponent.parseTitle($divFor),\n        type,\n        valid: QuestionTypeComponent.isValid(answer),\n      });\n    });\n    cards.push({\n      index: cardIndex,\n      className: fieldsetFor.className,\n      completed: questions.every(({ completed }) => completed),\n      valid: questions.every(({ valid }) => valid),\n      waiting: false,\n      questions\n    });\n  });\n\n  const initialState = {\n    cards,\n    currentCardIndex: 0,\n  };\n\n  return initialState;\n}\n\n\nexport function prepareInitialState(initialState) {\n  if (initialState.finalText === undefined) {\n    initialState.finalText = window.CEPA ? window.CEPA.finalText : '';\n  };\n  const uncompletedCards = selectors.getCompletedCards(initialState, false);\n  if (uncompletedCards.length) {\n    initialState.currentCardIndex = uncompletedCards[0].index;\n  }\n  return initialState;\n}\n\n// {\n//   \"id\": \"q10532\",\n//   \"type\": 3,\n//   \"title\": \"Com relação às capacidades biológicas necessárias para se executar a tarefa de conduzir um veículo podemos considerar:\",\n//   \"answer\": \"\",\n//   \"properties\": {\n//     \"description\": \"\",\n//     \"allow_multiple_selection\": false,\n//     \"allow_other_choice\": false,\n//     \"choices\": [\n//       {\n//         \"label\": \"Visão\",\n//         \"id\": \"9\"\n//       },\n//       {\n//         \"label\": \"Coordenação motora\",\n//         \"id\": \"10\"\n//       },\n//       {\n//         \"label\": \"Reflexo\",\n//         \"id\": \"11\"\n//       },\n//       {\n//         \"label\": \"Todas as alternativas anteriores.\",\n//         \"id\": \"12\"\n//       }\n//     ]\n//   },\n//   \"validations\": {\n//     \"required\": true,\n//   },\n//   \"attachment\": {\n//     \"type\": \"image\",\n//     \"href\": \"https://via.placeholder.com/150\"\n//   }\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './utils/polyfills';\nimport configureStore from './state/store';\nimport App from './components/App';\nimport { loadScript } from './components/utils';\nimport { getDataFromHTML, prepareInitialState } from './utils/parser';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\n\nconst $ = window.$;\nconst $assessment = $('#assessment');\n\nconst dataFromHTML = getDataFromHTML($assessment);\n\nwindow.CEPA = window.CEPA || {};\nif (window.CEPA.locales === undefined) {\n  loadScript('https://www.bytelockers.com/cepa/static/js/locales.js');\n}\nwindow.CEPA.lang = $('html').attr('lang') || 'es';\nwindow.CEPA.postURL = $assessment.attr('action');\nwindow.CEPA.module = $assessment.data('module');\nwindow.CEPA.successRedirect = $assessment.data('success-redirect');\nwindow.CEPA.finalText = window.CEPA.finalText || $('#final-text').html();\nwindow.CEPA.scrollToElement = function (element) {\n  var headerHeight = window.matchMedia('(min-width: 576px)').matches ? 62 : 40;\n  var backToVideoHeight = 46;\n  $([document.documentElement, document.body]).animate({\n    scrollTop: $(element).offset().top - headerHeight - backToVideoHeight\n  }, 500);\n};\n\nconst rootElement = document.getElementById('root');\nconst initialState = prepareInitialState(window.CEPA.initialState || dataFromHTML);\nconst store = configureStore(initialState);\n\nrootElement && ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n$(function(jQuery){\n\n  const $thumbsSlider = $('.thumbs-slider');\n  $thumbsSlider.slick && $thumbsSlider.slick({\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    infinite: false,\n    prevArrow: '<div class=\"slick-prev\">Previous</div>',\n    nextArrow: '<div class=\"slick-next\">Next</div>',\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          infinite: false,\n        }\n      },\n      {\n        breakpoint: 576,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: false,\n        }\n      },\n    ],\n  });\n  const selectedCard = $('.cepa-card.selected')[0];\n  if (selectedCard) setTimeout(function(){\n    window.CEPA.scrollToElement(selectedCard);\n  });\n});\n"],"sourceRoot":""}